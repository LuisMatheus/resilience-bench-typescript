"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const sinon_1 = require("sinon");
const Policy_1 = require("./Policy");
describe('FallbackPolicy', () => {
    it('does not fall back when not necessary', async () => {
        const result = await (0, Policy_1.fallback)(Policy_1.handleAll, 'error').execute(() => 'ok');
        (0, chai_1.expect)(result).to.equal('ok');
    });
    it('returns a fallback and emits an error if necessary', async () => {
        const policy = (0, Policy_1.fallback)(Policy_1.handleAll, 'error');
        const onFallback = (0, sinon_1.stub)();
        policy.onFailure(onFallback);
        const error = new Error('oh no!');
        const result = await policy.execute(() => {
            throw error;
        });
        (0, chai_1.expect)(result).to.equal('error');
        (0, chai_1.expect)(onFallback).calledWith({
            reason: { error },
            handled: true,
            duration: onFallback.args[0]?.[0].duration,
        });
    });
    it('links parent cancellation token', async () => {
        const parent = new AbortController();
        await (0, Policy_1.fallback)(Policy_1.handleAll, 'error').execute(({ signal }) => {
            (0, chai_1.expect)(signal.aborted).to.be.false;
            parent.abort();
            (0, chai_1.expect)(signal.aborted).to.be.true;
        }, parent.signal);
    });
});
//# sourceMappingURL=FallbackPolicy.test.js.map