{"version":3,"file":"RetryPolicy.test.js","sourceRoot":"","sources":["../src/RetryPolicy.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, use } from 'chai';\nimport { SinonFakeTimers, SinonStub, stub, useFakeTimers } from 'sinon';\nimport { ExponentialBackoff, IterableBackoff, noJitterGenerator } from './backoff/Backoff';\nimport { runInChild } from './common/util.test';\nimport { handleAll, handleType, handleWhenResult, retry } from './Policy';\n\nuse(require('sinon-chai'));\nuse(require('chai-as-promised'));\n\nclass MyErrorA extends Error {\n  constructor() {\n    super('Error A');\n  }\n}\nclass MyErrorB extends Error {\n  constructor() {\n    super('Error B');\n  }\n}\n\ndescribe('RetryPolicy', () => {\n  it('types return data correctly in all cases', async () => {\n    const policy = retry(handleAll, { maxAttempts: 1 });\n    const multiply = (n: number) => n * 2;\n    multiply(await policy.execute(() => 42));\n    multiply(await policy.execute(async () => 42));\n  });\n\n  describe('setting backoffs', () => {\n    let s: SinonStub;\n    let clock: SinonFakeTimers;\n    let delays: number[];\n    beforeEach(() => {\n      clock = useFakeTimers();\n      delays = [];\n      s = stub().throws(new MyErrorA());\n    });\n\n    afterEach(() => clock.restore());\n\n    const makePolicy = (durations: number[]) => {\n      const p = retry(handleAll, {\n        maxAttempts: durations.length,\n        backoff: new IterableBackoff(durations),\n      });\n      p.onRetry(({ delay }) => {\n        delays.push(delay);\n        clock.tick(delay);\n      });\n      return p;\n    };\n\n    it('sets the retry delay', async () => {\n      await expect(makePolicy([50]).execute(s)).to.eventually.be.rejectedWith(MyErrorA);\n      expect(delays).to.deep.equal([50]);\n      expect(s).to.have.been.calledTwice;\n    });\n\n    it('sets the retry sequence', async () => {\n      await expect(makePolicy([10, 20, 20]).execute(s)).to.eventually.be.rejectedWith(MyErrorA);\n      expect(delays).to.deep.equal([10, 20, 20]);\n      expect(s).to.have.callCount(4);\n    });\n  });\n\n  it('retries all errors', async () => {\n    const s = stub().onFirstCall().throws(new MyErrorA()).onSecondCall().returns('ok');\n\n    expect(await retry(handleAll, {}).execute(s)).to.equal('ok');\n\n    expect(s).to.have.been.calledTwice;\n  });\n\n  it('filters error types', async () => {\n    const s = stub().onFirstCall().throws(new MyErrorA()).onSecondCall().throws(new MyErrorB());\n\n    await expect(\n      retry(handleType(MyErrorA), { maxAttempts: 5 }).execute(s),\n    ).to.eventually.be.rejectedWith(MyErrorB);\n\n    expect(s).to.have.been.calledTwice;\n  });\n\n  it('filters returns', async () => {\n    const s = stub().onFirstCall().returns(1).onSecondCall().returns(2);\n\n    expect(\n      await retry(\n        handleWhenResult(r => typeof r === 'number' && r < 2),\n        { maxAttempts: 5 },\n      ).execute(s),\n    ).to.equal(2);\n\n    expect(s).to.have.been.calledTwice;\n  });\n\n  it('permits specifying exponential backoffs', async () => {\n    const s = stub().returns(1);\n\n    expect(\n      await retry(\n        handleWhenResult(r => typeof r === 'number'),\n        { backoff: new ExponentialBackoff({ generator: noJitterGenerator }), maxAttempts: 2 },\n      ).execute(s),\n    ).to.equal(1);\n\n    expect(s).to.have.callCount(3);\n  });\n\n  it('bubbles returns when retry attempts exceeded', async () => {\n    const s = stub().returns(1);\n\n    expect(\n      await retry(\n        handleWhenResult(r => typeof r === 'number' && r < 2),\n        { maxAttempts: 5 },\n      ).execute(s),\n    ).to.equal(1);\n\n    expect(s).to.have.callCount(6);\n  });\n\n  it('bubbles errors when retry attempts exceeded', async () => {\n    const s = stub().throws(new MyErrorB());\n\n    await expect(retry(handleAll, { maxAttempts: 5 }).execute(s)).to.eventually.be.rejectedWith(\n      MyErrorB,\n    );\n\n    expect(s).to.have.callCount(6);\n  });\n\n  it('does not unref by default', async () => {\n    const output = await runInChild(`\n      c.retry(c.handleAll, { maxAttempts: 1 }).execute(() => {\n        console.log('attempt');\n        throw new Error('oh no!');\n      });\n    `);\n\n    expect(output).to.contain('oh no!');\n  });\n\n  it('unrefs as requested', async () => {\n    const output = await runInChild(`\n    c.retry(c.handleAll, { maxAttempts: 1 }).dangerouslyUnref().execute(() => {\n      console.log('attempt');\n      throw new Error('oh no!');\n    });\n    `);\n\n    expect(output).to.equal('attempt');\n  });\n\n  it('stops retries if cancellation is requested', async () => {\n    const parent = new AbortController();\n    const err = new Error();\n    let calls = 0;\n    await expect(\n      retry(handleAll, { maxAttempts: 3 }).execute(({ signal }) => {\n        calls++;\n        expect(signal.aborted).to.be.false;\n        parent.abort();\n        expect(signal.aborted).to.be.true;\n        throw err;\n      }, parent.signal),\n    ).to.eventually.be.rejectedWith(err);\n    expect(calls).to.equal(1);\n  });\n\n  it('fires onGiveUp', async () => {\n    const err = new MyErrorA();\n    const s = stub().throws(err);\n    const policy = retry(handleType(MyErrorA), { maxAttempts: 5 });\n    const onGiveUp = stub();\n    policy.onGiveUp(onGiveUp);\n\n    await expect(policy.execute(s)).to.eventually.be.rejectedWith(MyErrorA);\n    expect(onGiveUp).to.have.been.calledWith({ error: err });\n  });\n});\n"]}