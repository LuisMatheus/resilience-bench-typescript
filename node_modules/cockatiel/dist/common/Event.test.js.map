{"version":3,"file":"Event.test.js","sourceRoot":"","sources":["../../src/common/Event.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport { stub } from 'sinon';\nimport { TaskCancelledError } from '../errors/TaskCancelledError';\nimport { abortedSignal } from './abort';\nimport { Event, EventEmitter, MemorizingEventEmitter } from './Event';\n\ndescribe('Event', () => {\n  it('emits events', () => {\n    const s1 = stub();\n    const s2 = stub();\n    const s3 = stub();\n    const emitter = new EventEmitter<number>();\n\n    const l1 = emitter.addListener(s1);\n    emitter.emit(1);\n    const l2 = emitter.addListener(s2);\n    emitter.emit(2);\n    const l3 = emitter.addListener(s3);\n    emitter.emit(3);\n\n    l1.dispose();\n    emitter.emit(4);\n    l2.dispose();\n    emitter.emit(5);\n    l3.dispose();\n    emitter.emit(6);\n\n    expect(s1.args).to.deep.equal([[1], [2], [3]]);\n    expect(s2.args).to.deep.equal([[2], [3], [4]]);\n    expect(s3.args).to.deep.equal([[3], [4], [5]]);\n  });\n\n  it('memorizes event emissions', () => {\n    const s1 = stub();\n    const s2 = stub();\n    const emitter = new MemorizingEventEmitter<number>();\n    expect(emitter.hasEmitted).to.be.false;\n    emitter.addListener(s1);\n    emitter.emit(42);\n\n    expect(emitter.hasEmitted).to.be.true;\n    emitter.addListener(s2);\n\n    expect(s1).to.have.been.calledOnceWith(42);\n    expect(s2).to.have.been.calledOnceWith(42);\n  });\n\n  it('emits events once', () => {\n    const s = stub();\n    const emitter = new EventEmitter<number>();\n\n    Event.once(emitter.addListener, s);\n    emitter.emit(42);\n    emitter.emit(42);\n\n    expect(s).to.have.been.calledOnceWith(42);\n  });\n\n  it('emits events once with sync call', () => {\n    const s = stub();\n    const emitter = new MemorizingEventEmitter<number>();\n\n    emitter.emit(42);\n    Event.once(emitter.addListener, s);\n    emitter.emit(42);\n\n    expect(s).to.have.been.calledOnceWith(42);\n  });\n\n  it('converts to promise', async () => {\n    const emitter = new EventEmitter<number>();\n    const v = Event.toPromise(emitter.addListener);\n    emitter.emit(42);\n    expect(await v).to.equal(42);\n\n    expect(emitter.size).to.equal(0);\n  });\n\n  it('cancels conversion to promise', async () => {\n    const emitter = new EventEmitter<number>();\n    const cts = new AbortController();\n    setTimeout(() => cts.abort(), 1);\n    const v = Event.toPromise(emitter.addListener, cts.signal);\n    await expect(v).to.eventually.be.rejectedWith(TaskCancelledError);\n    expect(emitter.size).to.equal(0);\n  });\n\n  it('cancels conversion to promise sync', async () => {\n    const emitter = new EventEmitter<number>();\n    const v = Event.toPromise(emitter.addListener, abortedSignal);\n    await expect(v).to.eventually.be.rejectedWith(TaskCancelledError);\n    expect(emitter.size).to.equal(0);\n  });\n});\n"]}