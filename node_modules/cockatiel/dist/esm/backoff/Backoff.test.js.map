{"version":3,"file":"Backoff.test.js","sourceRoot":"","sources":["../../../src/backoff/Backoff.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,MAAM,CAAC;AAG9B,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,cAA8C,EAC9C,QAA2C,EAC3C,OAAW,EACX,EAAE;IACF,MAAM,MAAM,GAA8B,EAAE,CAAC;IAC7C,IAAI,OAAO,GAAG,cAAc,EAAE,IAAI,CAAC,OAAY,CAAC,CAAC;IACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACxC,IAAI,CAAC,OAAO,EAAE;YACZ,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACvB,SAAS;SACV;QAED,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC/B,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAY,CAAC,CAAC;KACtC;IAED,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACzC,CAAC,CAAC","sourcesContent":["import { expect } from 'chai';\nimport { IBackoffFactory } from './Backoff';\n\nexport const expectDurations = <T>(\n  backoffFactory: IBackoffFactory<T> | undefined,\n  expected: ReadonlyArray<number | undefined>,\n  context?: T,\n) => {\n  const actual: Array<number | undefined> = [];\n  let backoff = backoffFactory?.next(context as T);\n  for (let i = 0; i < expected.length; i++) {\n    if (!backoff) {\n      actual.push(undefined);\n      continue;\n    }\n\n    actual.push(backoff?.duration);\n    backoff = backoff.next(context as T);\n  }\n\n  expect(actual).to.deep.equal(expected);\n};\n"]}