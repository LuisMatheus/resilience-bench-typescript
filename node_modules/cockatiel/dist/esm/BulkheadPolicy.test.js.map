{"version":3,"file":"BulkheadPolicy.test.js","sourceRoot":"","sources":["../../src/BulkheadPolicy.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from 'chai';\nimport { promisify } from 'util';\nimport { abortedSignal } from './common/abort';\nimport { defer } from './common/defer';\nimport { BulkheadRejectedError } from './errors/BulkheadRejectedError';\nimport { TaskCancelledError } from './errors/Errors';\nimport { bulkhead } from './Policy';\n\nconst delay = promisify(setTimeout);\n\ndescribe('Bulkhead', () => {\n  let order: string[] = [];\n  let fnIndex = 0;\n  beforeEach(() => {\n    order = [];\n    fnIndex = 0;\n  });\n\n  const makeFn = () => {\n    const index = fnIndex++;\n    return async () => {\n      order.push(`${index}: enter`);\n      await delay(index * 2);\n      order.push(`${index}: exit`);\n      return index;\n    };\n  };\n\n  const makeFns = (count: number) => {\n    const out: Array<() => void> = [];\n    for (let i = 0; i < count; i++) {\n      out.push(makeFn());\n    }\n    return out;\n  };\n\n  it('rejects calls after limit is hit', async () => {\n    const b = bulkhead(2);\n    const funcs = makeFns(3);\n    const output = funcs.map(fn => b.execute(fn));\n\n    await Promise.all([\n      expect(output[0]).to.eventually.equal(0),\n      expect(output[1]).to.eventually.equal(1),\n      expect(output[2]).to.be.rejectedWith(BulkheadRejectedError),\n    ]);\n\n    expect(order).to.deep.equal(['0: enter', '1: enter', '0: exit', '1: exit']);\n  });\n\n  it('queues requests, and rejects after queue limit', async () => {\n    const b = bulkhead(2, 2);\n    const funcs = makeFns(5);\n    const output = funcs.map(fn => b.execute(fn));\n\n    await Promise.all([\n      expect(output[0]).to.eventually.equal(0),\n      expect(output[1]).to.eventually.equal(1),\n      expect(output[2]).to.eventually.equal(2),\n      expect(output[3]).to.eventually.equal(3),\n      expect(output[4]).to.be.rejectedWith(BulkheadRejectedError),\n    ]);\n\n    expect(order).to.deep.equal([\n      '0: enter',\n      '1: enter',\n      '0: exit',\n      '2: enter',\n      '1: exit',\n      '3: enter',\n      '2: exit',\n      '3: exit',\n    ]);\n  });\n\n  it('maintains proper state', async () => {\n    const b = bulkhead(2, 2);\n    const defer1 = defer();\n    const defer2 = defer();\n    const defer3 = defer();\n    const defer4 = defer();\n\n    expect(b.queueSlots).to.equal(2);\n    expect(b.executionSlots).to.equal(2);\n\n    const out1 = b.execute(() => defer1.promise);\n    expect(b.queueSlots).to.equal(2);\n    expect(b.executionSlots).to.equal(1);\n\n    const out2 = b.execute(() => defer2.promise);\n    expect(b.queueSlots).to.equal(2);\n    expect(b.executionSlots).to.equal(0);\n\n    const out3 = b.execute(() => defer3.promise);\n    expect(b.queueSlots).to.equal(1);\n    expect(b.executionSlots).to.equal(0);\n\n    const out4 = b.execute(() => defer4.promise);\n    expect(b.queueSlots).to.equal(0);\n    expect(b.executionSlots).to.equal(0);\n\n    defer1.resolve(undefined);\n    await out1;\n    expect(b.executionSlots).to.equal(0);\n    expect(b.queueSlots).to.equal(1);\n\n    defer2.resolve(undefined);\n    await out2;\n    expect(b.executionSlots).to.equal(0);\n    expect(b.queueSlots).to.equal(2);\n\n    defer3.resolve(undefined);\n    await out3;\n    expect(b.executionSlots).to.equal(1);\n    expect(b.queueSlots).to.equal(2);\n\n    defer4.resolve(undefined);\n    await out4;\n    expect(b.executionSlots).to.equal(2);\n    expect(b.queueSlots).to.equal(2);\n  });\n\n  it('links parent cancellation token', async () => {\n    const b = bulkhead(1, Infinity);\n    const todo: Array<PromiseLike<void>> = [];\n    for (let i = 0; i < 3; i++) {\n      const parent = new AbortController();\n      todo.push(\n        b.execute(async ({ signal }) => {\n          await delay(1);\n          expect(signal.aborted).to.be.false;\n          parent.abort();\n          expect(signal.aborted).to.be.true;\n        }, parent.signal),\n      );\n    }\n\n    // initially cancelled\n    todo.push(\n      expect(\n        b.execute(() => {\n          throw new Error('expected not to call');\n        }, abortedSignal),\n      ).to.be.rejectedWith(TaskCancelledError),\n    );\n\n    // cancelled by the time it gets executed\n    const cancelledCts = new AbortController();\n    setTimeout(() => cancelledCts.abort(), 2);\n    todo.push(\n      expect(\n        b.execute(() => {\n          throw new Error('expected not to call');\n        }, cancelledCts.signal),\n      ).to.be.rejectedWith(TaskCancelledError),\n    );\n\n    await Promise.all(todo);\n  });\n});\n"]}